
__kernel void subtract_U8_U8toU8_Sat
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    uint4 src0 = read_imageui(input0, coord);
    uint4 src1 = read_imageui(input1, coord);

    uint4 dst = sub_sat(src0, src1);

    dst.x = min(max(dst.x, 0), 255);

    write_imageui(output, coord, dst);
}

__kernel void subtract_U8_U8toU8_Warp
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    uint4 src0 = read_imageui(input0, coord);
    uint4 src1 = read_imageui(input1, coord);

    uchar data = (uchar)src0.x - src1.x;
    uint4 dst;
    dst.x = data;

    write_imageui(output, coord, dst);
}

__kernel void subtract_U8_U8toI16_Sat
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    uint4 src0 = read_imageui(input0, coord);
    uint4 src1 = read_imageui(input1, coord);

    int data = sub_sat(convert_short(src0.x), convert_short(src1.x));
    int4 dst;
    dst.x = convert_short_sat(data);

    write_imagei(output, coord, dst);
}

__kernel void subtract_U8_U8toI16_Warp
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    uint4 src0 = read_imageui(input0, coord);
    uint4 src1 = read_imageui(input1, coord);

    int data = src0.x - src1.x;
    int4 dst;
    dst.x = convert_short(data);

    write_imagei(output, coord, dst);
}

__kernel void subtract_U8_I16toI16_Sat
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    uint4 src0 = read_imageui(input0, coord);
    int4 src1 = read_imagei(input1, coord);

    int data = sub_sat(convert_int(src0.x), src1.x);
    int4 dst;
    dst.x = data;

    write_imagei(output, coord, dst);
}

__kernel void subtract_U8_I16toI16_Warp
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    uint4 src0 = read_imageui(input0, coord);
    int4 src1 = read_imagei(input1, coord);

    int data = convert_int(src0.x) - src1.x;
    int4 dst;
    dst.x = convert_short(data);

    write_imagei(output, coord, dst);
}

__kernel void subtract_I16_U8toI16_Sat
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    int4 src0 = read_imagei(input0, coord);
    uint4 src1 = read_imageui(input1, coord);

    int data = sub_sat(src0.x, convert_int_sat(src1.x));
    int4 dst;
    dst.x = data;

    write_imagei(output, coord, dst);
}

__kernel void subtract_I16_U8toI16_Warp
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    int4 src0 = read_imagei(input0, coord);
    uint4 src1 = read_imageui(input1, coord);

    int data = src0.x - convert_int(src1.x);
    int4 dst;
    dst.x = convert_short(data);

    write_imagei(output, coord, dst);
}

__kernel void subtract_I16_I16toI16_Sat
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    int4 src0 = read_imagei(input0, coord);
    int4 src1 = read_imagei(input1, coord);

    int data = sub_sat(src0.x, src1.x);
    int4 dst;
    dst.x = convert_short_sat(data);

    write_imagei(output, coord, dst);
}

__kernel void subtract_I16_I16toI16_Warp
    (
    __read_only  image2d_t input0,
    __read_only  image2d_t input1,
                 int       policy,
    __write_only image2d_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    int4 src0 = read_imagei(input0, coord);
    int4 src1 = read_imagei(input1, coord);

    short data = (short)src0.x - src1.x;
    int4 dst;
    dst.x = data;

    write_imagei(output, coord, dst);
}
