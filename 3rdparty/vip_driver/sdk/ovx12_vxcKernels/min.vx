#pragma OPENCL EXTENSION cl_viv_vx_extension : enable

#include "cl_viv_vx_ext.h"


__kernel void min_U8toU8
(
    __read_only image2d_t  in_image1,
    __read_only image2d_t  in_image2,
    __write_only image2d_t output
)
{

    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 src0, src1, result;

    VXC_ReadImage(src0, in_image1, coord, 0, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, in_image2, coord, 0, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    result = min(src0, src1);

    VXC_WriteImage(output, coord, result, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
}

__kernel void min_S16toS16
(
    __read_only image2d_t  in_image1,
    __read_only image2d_t  in_image2,
    __write_only image2d_t output
)
{

    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_short8 src0, src1, result;

    VXC_ReadImage(src0, in_image1, coord, 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(src1, in_image2, coord, 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    result = min(src0, src1);

    VXC_WriteImage(output, coord, result, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}
