#pragma OPENCL EXTENSION cl_viv_vx_extension : enable

#include "cl_viv_vx_ext.h"

_viv_uniform int2 offset2;
__kernel void image_crop_16Bits
    (
    __read_only  image2d_t input,
    __write_only image2d_t output,
                 int       xPos,
                 int       yPos,
                 int       width,
                 int       height
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_short8 src0;
    VXC_ReadImage(src0, input,coord.xy, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    coord.xy -= offset2.xy;

    VXC_WriteImage(output, coord.xy, src0, VXC_MODIFIER(0, 7, 0,VXC_RM_TowardZero, 0));
}

__kernel void image_crop_8Bits
    (
    __read_only  image2d_t input,
    __write_only image2d_t output,
                 int       xPos,
                 int       yPos,
                 int       width,
                 int       height
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 src0;
    VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    coord.xy -= offset2.xy;

    VXC_WriteImage(output, coord, src0, VXC_MODIFIER(0, 15, 0,VXC_RM_TowardZero, 0));
}

_viv_uniform int4 config;
_viv_uniform int4 config_last;
_viv_uniform int lastCol;
__kernel void image_crop_U1toU1
    (
    __read_only  image2d_t input,
    __write_only image2d_t output,
                 int       xPos,
                 int       yPos,
                 int       width,
                 int       height
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 src0;
    VXC_ReadImage(src0, input, coord, VXC_5BITOFFSET_XY(0, 0), VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    int4 _config = coord.x == lastCol ? config_last : config;

    VXC_BitExtract(src0, src0, src0, _config, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    coord.xy -= offset2.xy;

    VXC_WriteImage(output, coord, src0, VXC_MODIFIER(0, 7, 0,VXC_RM_TowardZero, 0));
}
